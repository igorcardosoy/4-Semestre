/*
Principais conceitos vistos, até o momento, na disciplina e exemplos de seu uso.

Cauã Rufino de Sá
Igor Filipi Cardoso

Domínio: Aeroporto
O sistema tem o objetivo de gerenciar as operações principais de um aeroporto, abrangendo o cadastro de voos, passageiros, funcionários, aeronaves e destinos, além de monitorar o embarque, desembarque e horários de partidas e chegadas.
*/


-- A role Master representará o administrador geral do banco, tendo poder para criar, editar e deletar tabelas, visões, sessões, bem como os dados das tabelas.

DROP ROLE MASTER;
CREATE ROLE MASTER; 

GRANT all privileges TO MASTER;

GRANT CREATE SESSION, 
      CREATE TABLE,
      CREATE USER,
      CREATE ROLE,
      CREATE SEQUENCE,  
      CREATE VIEW, 
      DROP ANY TABLE,
      INSERT ANY TABLE,  
      SELECT ANY TABLE, 
      ALTER ANY TABLE, 
      UPDATE ANY TABLE,  
      DELETE ANY TABLE,
      ALTER USER,
      DROP USER,
      CREATE ANY VIEW,
      DROP ANY VIEW,
      GRANT ANY OBJECT PRIVILEGE,
      GRANT ANY PRIVILEGE, 
      DROP ANY ROLE
TO MASTER;


-- Usuário master do sistema
DROP USER AEROPORTO CASCADE;

CREATE USER AEROPORTO
IDENTIFIED BY AIRPORTPASS
DEFAULT TABLESPACE USERS
TEMPORARY TABLESPACE TEMP
QUOTA UNLIMITED ON USERS;

GRANT MASTER TO AEROPORTO with ADMIN OPTION;
GRANT CREATE ROLE TO AEROPORTO;

SELECT * 
FROM DBA_SYS_PRIVS
WHERE GRANTEE = 'AEROPORTO';
-- Tabela de Aeronaves
CREATE TABLE aeronave (
   aeronave_id   NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   modelo        VARCHAR(100) NOT NULL,
   fabricante    VARCHAR(100) NOT NULL,
   capacidade    NUMBER NOT NULL,
   status        VARCHAR(50) NOT NULL
);


-- Tabela de Passageiros
CREATE TABLE passageiro (
   passageiro_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   nome          VARCHAR(50) NOT NULL,
   cpf           VARCHAR(11) NOT NULL UNIQUE,
   telefone      VARCHAR(15) NOT NULL,
   passaporte    VARCHAR(50)
);


-- Tabela de Funcionários
CREATE TABLE funcionario (
   funcionario_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   nome           VARCHAR(50) NOT NULL,
   cpf            VARCHAR(11) NOT NULL UNIQUE,
   cargo          VARCHAR(50) NOT NULL,
   setor          VARCHAR(50) NOT NULL

);


-- Tabela de Aeroportos
CREATE TABLE aeroporto (
   aeroporto_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   nome         VARCHAR(50) NOT NULL,
   cidade       VARCHAR(50) NOT NULL,
   estado       VARCHAR(50) NOT NULL,
   pais         VARCHAR(50) NOT NULL

);


-- Tabela de Voos
CREATE TABLE voo (
   voo_id        NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   numero_voo    VARCHAR(50) NOT NULL,
   aeronave_id   NUMBER NOT NULL,
   destino_id    NUMBER NOT NULL,
   origem_id     NUMBER NOT NULL,
   data_partida  DATE NOT NULL,
   data_chegada  DATE NOT NULL,
   status        NUMBER NOT NULL,

   CONSTRAINT fk_aeronave FOREIGN KEY (aeronave_id) REFERENCES aeronave (aeronave_id),
   CONSTRAINT fk_destino FOREIGN KEY (destino_id) REFERENCES aeroporto (aeroporto_id),
   CONSTRAINT fk_origem FOREIGN KEY (origem_id) REFERENCES aeroporto (aeroporto_id)

);


-- Tabela de Funcionários por Voo
CREATE TABLE funcionario_voo (
   funcionario_voo_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   funcionario_id     NUMBER NOT NULL,
   voo_id             NUMBER NOT NULL,
   cargo_funcionario  VARCHAR(50) NOT NULL,
   CONSTRAINT fk_funcionario_voo FOREIGN KEY (funcionario_id) REFERENCES funcionario (funcionario_id),
   CONSTRAINT fk_voo FOREIGN KEY (voo_id) REFERENCES voo (voo_id)
);


-- Table de Passageiros por Voo
CREATE TABLE passageiro_voo (
   passageiro_voo_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   passageiro_id     NUMBER NOT NULL,
   voo_id             NUMBER NOT NULL,
   assento           VARCHAR(10) NOT NULL,
   status_voo        VARCHAR(50) NOT NULL,
   
   CONSTRAINT fk_passageiro_voo_passageiro FOREIGN KEY (passageiro_id) REFERENCES passageiro (passageiro_id),
   CONSTRAINT fk_passageiro_voo_voo FOREIGN KEY (voo_id) REFERENCES voo (voo_id)
);

-- Tabela de Manutenção
CREATE TABLE manutencao (
   manutencao_id    NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   aeronave_id      NUMBER NOT NULL,
   funcionario_id   NUMBER NOT NULL,
   data_manutencao  DATE NOT NULL,
   descricao        VARCHAR(255) NOT NULL,
   custo            NUMBER NOT NULL,
   
   CONSTRAINT fk_aeronave_manutencao FOREIGN KEY (aeronave_id) REFERENCES aeronave (aeronave_id),
   CONSTRAINT fk_funcionario_manutencao FOREIGN KEY (funcionario_id) REFERENCES funcionario (funcionario_id)
);


-- Seleciona os IDs dos passageiros que viajaram em voos nacionais, os que participaram de voos internacionais e, depois, intersecciona os IDs dos passageiros que aparecem em ambos os conjuntos, ou seja, que viajaram em ambos os tipos de voos, mostrando seus dados.
SELECT DISTINCT
    p.nome,
    p.cpf,
    p.telefone,
    p.passaporte,
    v.numero_voo,
    origem.nome AS origem,
    destino.nome AS destino,
    origem.pais,
    destino.pais
FROM passageiro p
    NATURAL JOIN passageiro_voo pv
    NATURAL JOIN voo v
    JOIN aeroporto origem ON v.ORIGEM_ID = origem.AEROPORTO_ID
    JOIN aeroporto destino ON v.DESTINO_ID = destino.AEROPORTO_ID
WHERE origem.PAIS = 'Brasil'
AND destino.PAIS = 'Brasil'
INTERSECT
    SELECT DISTINCT
        p.nome,
        p.cpf,
        p.telefone,
        p.passaporte,
        v.numero_voo,
        origem.nome AS origem,
        destino.nome AS destino,
        origem.pais,
        destino.pais
FROM passageiro p
    NATURAL JOIN passageiro_voo pv
    NATURAL JOIN voo v
    JOIN aeroporto origem ON v.ORIGEM_ID = origem.AEROPORTO_ID
    JOIN aeroporto destino ON v.DESTINO_ID = destino.AEROPORTO_ID
WHERE origem.PAIS != 'Brasil'
OR destino.PAIS != 'Brasil';


-- Seleciona os dados de todos os funcionarios e passageiros os ordenando por voo, tipo e nome. Para se ter um relatório de quais passageiros e funcionarios estavam em cada voo.
SELECT
    F.nome AS nome,
    'Funcionario' AS tipo,
    V.numero_voo AS numerovoo,
    V.data_partida AS datapartida
FROM funcionario F
    JOIN funcionario_voo fv USING (funcionario_id)
    JOIN voo V USING (voo_id)
UNION ALL
SELECT
    P.nome AS nome, 
    'Passageiro' AS tipo,
    V.numero_voo AS numerovoo,
    V.data_partida AS datapartida
FROM passageiro P
    JOIN passageiro_voo pv USING (passageiro_id)
    JOIN voo V USING (voo_id)
ORDER BY datapartida, tipo, nome;


-- Seleciona quais aeronaves estão inativas atualmente, listar seu modelo, fabricante e a data da última manutenção realizada, e tiveram voos internacionais no ano de 2024.
SELECT DISTINCT
    A.modelo,
    A.fabricante,
    A.status,
    V.data_chegada,
    origem.nome AS origem,
    destino.nome AS destino,
    M.data_manutencao
FROM aeronave A
    LEFT JOIN manutencao M USING (aeronave_id)
    JOIN voo V USING (aeronave_id)
    JOIN aeroporto origem ON V.origem_id = origem.aeroporto_id
    JOIN aeroporto destino ON V.destino_id = destino.aeroporto_id
WHERE A.status = 'Inativa'
    AND (origem.pais != 'Brasil' OR destino.pais != 'Brasil')
    AND V.data_partida BETWEEN TO_DATE('2024-01-01', 'YYYY-MM-DD')
    AND TO_DATE('2024-12-31', 'YYYY-MM-DD')
ORDER BY M.data_manutencao;


-- Identificar os aeroportos brasileiros que permitem voos internacionais que mais serviram como destino de voos no último ano e listar o nome do aeroporto, a cidade e o número total de voos recebidos.
SELECT
   A.nome,
   A.cidade,
   COUNT(V.destino_id) AS totalvoos
FROM aeroporto A
    JOIN voo V ON A.aeroporto_id = V.destino_id
WHERE A.pais = 'Brasil'AND A.nome LIKE '%Internacional%'
GROUP BY A.nome, A.cidade
ORDER BY totalvoos DESC;


-- Seleciona o nome, cpf, setor, data do primeiro voo e quantidade de voos realizados por cada piloto.
SELECT
    F.nome,
    F.cpf,
    F.setor,
    MIN(data_partida) AS primeiro_voo,
    COUNT(*) AS quantidade_voos
FROM funcionario F
    JOIN funcionario_voo fv USING (funcionario_id)
    JOIN voo V USING (voo_id)
WHERE F.cargo = 'Piloto'
GROUP BY F.nome, F.cpf, F.setor;


-- Seleciona o fabricante e o custo médio de manutenção das aeronaves por fabricante, através de uma subconsulta que agrupa e seleciona todas as manutenções realizadas por fabricante.
SELECT 
    fabricante, 
    AVG(custototal) AS mediacusto  
FROM (
    SELECT 
        A.fabricante,  
        SUM(M.custo) AS custototal  
    FROM manutencao M  
    INNER JOIN aeronave A USING (aeronave_id) 
    GROUP BY A.fabricante  
)  
GROUP BY fabricante;


-- Seleciona o número do voo e a quantidade de funcionários presentes em cada voo, utilizando uma subconsulta que seleciona e conta cada funcionário presente em cada voo.
SELECT 
    V.numero_voo, (
        SELECT COUNT(*)    
        FROM funcionario_voo fv    
        WHERE fv.voo_id = V.voo_id   
    ) AS total_funcionarios   
FROM voo V;


-- Seleciona o nome e a quantidade de voos que cada passageiro realizou, através de uma subconsulta que seleciona a quantidade de ocorrências do id de cada passageiro.
SELECT P.nome, (
        SELECT COUNT(*)   
        FROM passageiro_voo pv   
        WHERE pv.passageiro_id = P.passageiro_id  
    ) AS total_voos  
FROM passageiro P;
    

    -- 4. Criação de, pelo menos, 3 visões. Dê preferência para as visões que teriam maior utilidade para os usuários e explique o motivo da sua escolha;

-- A view voos_ativos exibirá os voos que estão ativos, ou seja, que ainda não ocorreram.
CREATE VIEW voos_ativos AS
SELECT
    V.numero_voo,
    A.modelo,
    A.fabricante,
    V.data_partida,
    V.data_chegada,
    origem.nome AS origem,
    destino.nome AS destino
FROM voo V
    JOIN aeronave A USING (aeronave_id)
    JOIN aeroporto origem ON V.origem_id = origem.aeroporto_id
    JOIN aeroporto destino ON V.destino_id = destino.aeroporto_id
WHERE V.status
    AND V.data_partida > SYSDATE;
    
-- A view aeronaves_manutenir exibirá as aeronaves inativas, listando seu modelo, fabricante e a data da última manutenção realizada.
CREATE VIEW aeronaves_manutenir AS
SELECT
    A.modelo,
    A.fabricante,
    M.data_manutencao
FROM aeronave A
WHERE A.status = 'Inativa'

-- A view assentos_disponiveis exibirá a quantidade de assentos disponíveis em cada voo, subtraindo a capacidade da aeronave.
CREATE VIEW assentos_disponiveis AS
SELECT
    V.numero_voo,
    A.capacidade - COUNT(PV.assento) AS assentos_disponiveis
FROM voo V
    JOIN passageiro_voo PV USING (voo_id)
    JOIN aeronave A USING (aeronave_id)
WHERE PV.status_voo = 'Confirmado'
GROUP BY V.numero_voo;


    -- 5. crie, pelo menos, 3 papéis (roles) e explique o motivo da sua escolha;
    
-- A role User representará os usuários finais do sistema, que terão poder apenas para consultar os voos ativos.
CREATE ROLE USER;

GRANT CREATE SESSION TO USER;
GRANT VIEW ON Voos_Ativos TO USER;
GRANT VIEW on Assentos_disponiveis TO SELLER;

-- A role Maintainer representará os diversos manutenidores do sistema, os funcionários que realizam reparos, que possuirão poder para consultar e atualizar dados nas tabelas referentes as aeronaves. 
CREATE ROLE MANTAINER;

GRANT CREATE SESSION,
VIEW ON aeronaves_manutenir,
UPDATE TABLE ON AERONAVE,
UPDATE TABLE ON MANUTENCAO
TO MANTAINER; 

-- Já a role Seller representará os funcionários responsáveis por atualizar, cadastrar e editar os dados dos novos usuários, bem como vender passagens aéreas.
CREATE ROLE SELLER;
 
GRANT CREATE SESSION TO SELLER;

GRANT INSERT ON PASSAGEIRO TO SELLER;
GRANT INSERT ON VOO TO SELLER;
GRANT INSERT ON PASSAGEIRO_VOO TO SELLER;
 
GRANT SELECT ON PASSAGEIRO TO SELLER;
GRANT VIEW on Assentos_disponiveis TO SELLER;
GRANT VIEW on Voos_ativos TO SELLER;
 
GRANT UPDATE ON PASSAGEIRO TO SELLER;
GRANT UPDATE ON VOO TO SELLER;
GRANT UPDATE ON PASSAGEIRO_VOO TO SELLER;


-- A role Crew representará os funcionários que necessitam de saber apenas em quais voos estão alocados, garantindo visualizacao à ‘escala’ de funcionários x voos.
CREATE ROLE CREW; 

GRANT CREATE SESSION,  
SELECT TABLE ON PASSAGEIRO_VOO  
TO CREW;


-- Usuário adereçados aos mecânicos do sistema
CREATE USER MECANICO
IDENTIFIED BY PILOTPASS
DEFAULT TABLESPACE USERS
TEMPORARY TABLESPACE TEMP;
ALTER USER AEROPORTO QUOTA UNLIMITED ON USERS;
 
GRANT MANTAINER TO MECANICO;

--inserts

-- Inserts para a tabela de Aeronaves
INSERT INTO aeronave (modelo, fabricante, capacidade, status) VALUES ('Boeing 737', 'Boeing', 200, 'Ativa');
INSERT INTO aeronave (modelo, fabricante, capacidade, status) VALUES ('Airbus A320', 'Airbus', 180, 'Inativa');
INSERT INTO aeronave (modelo, fabricante, capacidade, status) VALUES ('Embraer E195', 'Embraer', 132, 'Ativa');
INSERT INTO aeronave (modelo, fabricante, capacidade, status) VALUES ('Boeing 747', 'Boeing', 400, 'Inativa');
INSERT INTO aeronave (modelo, fabricante, capacidade, status) VALUES ('Airbus A380', 'Airbus', 800, 'Ativa');
INSERT INTO aeronave (modelo, fabricante, capacidade, status) VALUES ('McDonnell Douglas MD-80', 'McDonnell Douglas', 150, 'Inativa');
INSERT INTO aeronave (modelo, fabricante, capacidade, status) VALUES ('Lockheed L-1011 TriStar', 'Lockheed', 300, 'Inativa');
INSERT INTO aeronave (modelo, fabricante, capacidade, status) VALUES ('Concorde', 'Aerospatiale/BAC', 120, 'Inativa');
 
-- Inserts para a tabela de Passageiros
INSERT INTO passageiro (nome, cpf, telefone, passaporte) VALUES ('João Silva', '12345678901', '11999999999', 'BR123456');
INSERT INTO passageiro (nome, cpf, telefone, passaporte) VALUES ('Maria Oliveira', '23456789012', '11988888888', 'BR234567');
INSERT INTO passageiro (nome, cpf, telefone, passaporte) VALUES ('Carlos Pereira', '34567890123', '11977777777', NULL);
INSERT INTO passageiro (nome, cpf, telefone, passaporte) VALUES ('Ana Costa', '45678901234', '11966666666', 'BR345678');
INSERT INTO passageiro (nome, cpf, telefone, passaporte) VALUES ('Lucas Mendes', '56789012345', '11955555555', NULL);
 
-- Inserts para a tabela de Funcionários
INSERT INTO funcionario (nome, cpf, cargo, setor) VALUES ('Paulo Andrade', '67890123456', 'Piloto', 'Operações');
INSERT INTO funcionario (nome, cpf, cargo, setor) VALUES ('Fernanda Souza', '78901234567', 'Comissário', 'Operações');
INSERT INTO funcionario (nome, cpf, cargo, setor) VALUES ('Rafael Lima', '89012345678', 'Mecânico', 'Manutenção');
INSERT INTO funcionario (nome, cpf, cargo, setor) VALUES ('Mariana Ribeiro', '90123456789', 'Supervisor', 'Administração');
INSERT INTO funcionario (nome, cpf, cargo, setor) VALUES ('Pedro Santos', '01234567890', 'Mecânico', 'Manutenção');
 
-- Inserts para a tabela de Aeroportos
INSERT INTO aeroporto (nome, cidade, estado, pais) VALUES ('Aeroporto Internacional de Guarulhos', 'São Paulo', 'SP', 'Brasil');
INSERT INTO aeroporto (nome, cidade, estado, pais) VALUES ('Aeroporto Internacional Tom Jobim', 'Rio de Janeiro', 'RJ', 'Brasil');
INSERT INTO aeroporto (nome, cidade, estado, pais) VALUES ('JFK International Airport', 'Nova York', 'Nova York', 'EUA');
INSERT INTO aeroporto (nome, cidade, estado, pais) VALUES ('Heathrow Airport', 'Londres', 'Inglaterra', 'Reino Unido');
INSERT INTO aeroporto (nome, cidade, estado, pais) VALUES ('Aeroporto Internacional de Brasília', 'Brasília', 'DF', 'Brasil');
 
-- Inserts para a tabela de Voos
INSERT INTO voo (numero_voo, aeronave_id, destino_id, origem_id, data_partida, data_chegada, status) VALUES ('GRU123', 1, 2, 1, TO_DATE('2024-03-10', 'YYYY-MM-DD'), TO_DATE('2024-03-10', 'YYYY-MM-DD'), 1);
INSERT INTO voo (numero_voo, aeronave_id, destino_id, origem_id, data_partida, data_chegada, status) VALUES ('GIG456', 2, 1, 3, TO_DATE('2024-07-15', 'YYYY-MM-DD'), TO_DATE('2024-07-15', 'YYYY-MM-DD'), 1);
INSERT INTO voo (numero_voo, aeronave_id, destino_id, origem_id, data_partida, data_chegada, status) VALUES ('NYC789', 4, 3, 1, TO_DATE('2024-05-05', 'YYYY-MM-DD'), TO_DATE('2024-05-05', 'YYYY-MM-DD'), 1);
INSERT INTO voo (numero_voo, aeronave_id, destino_id, origem_id, data_partida, data_chegada, status) VALUES ('LHR101', 2, 4, 2, TO_DATE('2024-02-20', 'YYYY-MM-DD'), TO_DATE('2024-02-20', 'YYYY-MM-DD'), 1);
INSERT INTO voo (numero_voo, aeronave_id, destino_id, origem_id, data_partida, data_chegada, status) VALUES ('BSB202', 3, 5, 2, TO_DATE('2024-06-18', 'YYYY-MM-DD'), TO_DATE('2024-06-18', 'YYYY-MM-DD'), 1);
INSERT INTO voo (numero_voo, aeronave_id, destino_id, origem_id, data_partida, data_chegada, status) 
VALUES ('MD101', 4, 3, 2, TO_DATE('2024-10-01 08:00:00', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2024-10-01 12:00:00', 'YYYY-MM-DD HH24:MI:SS'), 2);
INSERT INTO voo (numero_voo, aeronave_id, destino_id, origem_id, data_partida, data_chegada, status) 
VALUES ('LL202', 5, 5, 4, TO_DATE('2024-09-15 14:00:00', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2024-09-15 18:00:00', 'YYYY-MM-DD HH24:MI:SS'), 1);
INSERT INTO voo (numero_voo, aeronave_id, destino_id, origem_id, data_partida, data_chegada, status) 
VALUES ('CC303', 6, 4, 1, TO_DATE('2024-08-20 06:00:00', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2024-08-20 10:00:00', 'YYYY-MM-DD HH24:MI:SS'), 3);
 
-- Inserts para a tabela de Funcionários por Voo
INSERT INTO funcionario_voo (funcionario_id, voo_id, cargo_funcionario) VALUES (1, 1, 'Piloto');
INSERT INTO funcionario_voo (funcionario_id, voo_id, cargo_funcionario) VALUES (2, 1, 'Comissário');
INSERT INTO funcionario_voo (funcionario_id, voo_id, cargo_funcionario) VALUES (1, 2, 'Piloto');
INSERT INTO funcionario_voo (funcionario_id, voo_id, cargo_funcionario) VALUES (3, 3, 'Mecânico');
INSERT INTO funcionario_voo (funcionario_id, voo_id, cargo_funcionario) VALUES (4, 5, 'Supervisor');
 
-- Inserts para a tabela de Passageiros por Voo
INSERT INTO passageiro_voo (passageiro_id, voo_id, assento, status_voo) VALUES (1, 1, '12A', 'Confirmado');
INSERT INTO passageiro_voo (passageiro_id, voo_id, assento, status_voo) VALUES (2, 1, '12B', 'Confirmado');
INSERT INTO passageiro_voo (passageiro_id, voo_id, assento, status_voo) VALUES (3, 2, '14C', 'Confirmado');
INSERT INTO passageiro_voo (passageiro_id, voo_id, assento, status_voo) VALUES (4, 3, '15D', 'Confirmado');
INSERT INTO passageiro_voo (passageiro_id, voo_id, assento, status_voo) VALUES (5, 4, '16E', 'Confirmado');
 
-- Inserts para a tabela de Manutenção
INSERT INTO manutencao (aeronave_id, funcionario_id, data_manutencao, descricao, custo) VALUES (2, 3, TO_DATE('2024-01-15', 'YYYY-MM-DD'), 'Troca de turbinas', 50000);
INSERT INTO manutencao (aeronave_id, funcionario_id, data_manutencao, descricao, custo) VALUES (4, 5, TO_DATE('2024-03-20', 'YYYY-MM-DD'), 'Revisão geral', 30000);
INSERT INTO manutencao (aeronave_id, funcionario_id, data_manutencao, descricao, custo) VALUES (2, 3, TO_DATE('2024-06-10', 'YYYY-MM-DD'), 'Inspeção de segurança', 20000);
INSERT INTO manutencao (aeronave_id, funcionario_id, data_manutencao, descricao, custo) VALUES (4, 5, TO_DATE('2024-08-15', 'YYYY-MM-DD'), 'Troca de pneus', 10000);
INSERT INTO manutencao (aeronave_id, funcionario_id, data_manutencao, descricao, custo) VALUES (3, 3, TO_DATE('2024-09-25', 'YYYY-MM-DD'), 'Substituição de bateria', 15000);
INSERT INTO manutencao (aeronave_id, funcionario_id, data_manutencao, descricao, custo) 
VALUES (4, 1, TO_DATE('2024-11-10', 'YYYY-MM-DD'), 'Substituição de componentes hidráulicos', 4500);
INSERT INTO manutencao (aeronave_id, funcionario_id, data_manutencao, descricao, custo) 
VALUES (5, 2, TO_DATE('2024-10-20', 'YYYY-MM-DD'), 'Inspeção completa do sistema elétrico', 7000);
INSERT INTO manutencao (aeronave_id, funcionario_id, data_manutencao, descricao, custo) 
VALUES (6, 3, TO_DATE('2024-09-05', 'YYYY-MM-DD'), 'Revisão estrutural e troca de pneus', 6000);